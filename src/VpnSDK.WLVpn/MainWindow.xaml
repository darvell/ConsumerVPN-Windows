<controls:MetroWindow x:Class="VpnSDK.WLVpn.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:branding="clr-namespace:VpnSDK.WLVpn.Resources.Branding"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:tb="http://www.hardcodet.net/taskbar"
                      xmlns:views="clr-namespace:VpnSDK.WLVpn.Views"
                      Name="mainWindow"
                      Title="{DynamicResource BRAND_NAME}"
                      Width="490"
                      Height="450"
                      MinWidth="490"
                      MinHeight="450"
                      d:DesignHeight="450"
                      d:DesignWidth="490"
                      DataContext="{Binding Path=MainView, Source={StaticResource ViewModelLocator}}"
                      NonActiveWindowTitleBrush="{StaticResource NonActiveWindowTitleColorBrush}"
                      ShowCloseButton="True"
                      ShowIconOnTitleBar="False"
                      ShowMaxRestoreButton="False"
                      ShowMinButton="True"
                      TitleCharacterCasing="Normal"
                      TitleForeground="{DynamicResource BRAND_TITLE_TEXT_FOREGROUND}"
                      WindowStartupLocation="CenterScreen"
                      WindowTitleBrush="{StaticResource WindowTitleColorBrush}"
                      mc:Ignorable="d">
    <Window.Resources />
    <!--  note that the Datacontext is set above via a ViewModelLocator.  The ViewModelLocator is in the Views folder  -->
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands x:Name="WindowCommands" ShowSeparators="False">
            <Button x:Name="Signout"
                    Command="{Binding SettingsCmd}"
                    ToolTip="{x:Static branding:Strings.WINDOW_BUTTON_SETTINGS}">
                <Image Width="16"
                       Height="16"
                       Source="{DynamicResource SettingsIcon}" />
            </Button>

            <Button x:Name="ShowSettings"
                    Command="{Binding LogOutCmd}"
                    ToolTip="{x:Static branding:Strings.WINDOW_BUTTON_SIGNOUT}">
                <Image Width="16"
                       Height="16"
                       Source="{DynamicResource LogoutIcon}" />
            </Button>

        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  The main views are all shown in this content control.  The Content is bound to the CurrentView in the DataContext  -->
        <controls:TransitioningContentControl Grid.Row="0"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              HorizontalContentAlignment="Stretch"
                                              VerticalContentAlignment="Stretch"
                                              Content="{Binding CurrentView.View}" />

        <Border Grid.Row="0"
                Grid.RowSpan="2"
                Background="Black"
                KeyboardNavigation.TabNavigation="None"
                Opacity=".8"
                Visibility="{Binding ShowDialog, Converter={StaticResource BoolToVisibility}, FallbackValue=Hidden}" />

        <!--  Background="{StaticResource BRAND_MAIN_PANEL_BACKGROUND}"  -->
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{Binding ShowDialog, Converter={StaticResource BoolToVisibility}, FallbackValue=Hidden}">
            <Border HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="Transparent"
                    IsHitTestVisible="False" />

            <Grid Height="250"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Center"
                  KeyboardNavigation.TabNavigation="None">
                <ContentControl Margin="30,30"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Content="{Binding CurrentDialog.View}" />

            </Grid>
        </Grid>

        <tb:TaskbarIcon x:Name="TaskbarIconControl"
                        DoubleClickCommand="{Binding ShowMainViewCmd}"
                        IconSource="{Binding TaskbarIconSource}"
                        LeftClickCommand="{Binding ShowMainViewCmd}"
                        ToolTipText="{StaticResource BRAND_NAME}">
            <tb:TaskbarIcon.Resources>

                <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource BRAND_MENU_TEXT_HIGHLIGHT}" />

                <Style x:Key="BlackTextBlock" TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{StaticResource BRAND_CONTEXT_MENU_FOREGROUND_BRUSH}" />
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <!--<Style TargetType="{x:Type MenuItem}">
                    <Setter Property="Background"
                            Value="{StaticResource HighlightBrush}" />
                </Style>-->

            </tb:TaskbarIcon.Resources>
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu x:Name="contextMenu">
                    <TextBlock Style="{StaticResource BlackTextBlock}" Text="{Binding SDKMonitor.ExternalIPAddress, StringFormat={x:Static branding:Strings.TASKBAR_CURRENT_IP}}" />
                    <StackPanel Orientation="Vertical">
                        <TextBlock Style="{StaticResource BlackTextBlock}"
                                   Text="{x:Static branding:Strings.TASKBAR_CONNECTED}"
                                   Visibility="{Binding SDKMonitor.IsConnected, Converter={StaticResource FalseToCollapsed}}" />
                        <TextBlock Style="{StaticResource BlackTextBlock}"
                                   Text="{x:Static branding:Strings.TASKBAR_DISCONNECTED}"
                                   Visibility="{Binding SDKMonitor.IsConnected, Converter={StaticResource TrueToCollapsed}}" />
                    </StackPanel>

                    <Separator Background="Transparent" Foreground="{StaticResource BRAND_CONTEXT_MENU_FOREGROUND_BRUSH}" />

                    <!--  Visibility="{Binding SDKMonitor.CanConnect, Converter={StaticResource FalseToCollapsed}}">  -->
                    <MenuItem Command="{Binding ConnectCmd}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource FalseToCollapsed}}">
                        <MenuItem.Header>
                            <TextBlock Style="{StaticResource BlackTextBlock}" Text="{x:Static branding:Strings.VPN_BUTTON_CONNECT}" />
                        </MenuItem.Header>
                    </MenuItem>

                    <MenuItem Name="disconnect"
                              Command="{Binding DisconnectCmd}"
                              Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource FalseToCollapsed}}">
                        <MenuItem.Header>
                            <TextBlock Style="{StaticResource BlackTextBlock}" Text="{x:Static branding:Strings.VPN_BUTTON_DISCONNECT}" />
                        </MenuItem.Header>

                    </MenuItem>

                    <Separator Background="Transparent"
                               Foreground="{StaticResource BRAND_CONTEXT_MENU_FOREGROUND_BRUSH}"
                               Visibility="{Binding ElementName=disconnect, Path=IsEnabled, Converter={StaticResource FalseToCollapsed}}" />

                    <MenuItem Command="{Binding ShowDestinationsCmd}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource FalseToCollapsed}}">
                        <MenuItem.Header>
                            <TextBlock Style="{StaticResource BlackTextBlock}" Text="{x:Static branding:Strings.CHANGE_LOCATION_BUTTON}" />
                        </MenuItem.Header>
                    </MenuItem>

                    <MenuItem x:Name="pref"
                              Command="{Binding SettingsCmd}"
                              Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource FalseToCollapsed}}">
                        <MenuItem.Header>
                            <TextBlock Style="{StaticResource BlackTextBlock}" Text="{x:Static branding:Strings.WINDOW_BUTTON_SETTINGS}" />
                        </MenuItem.Header>
                    </MenuItem>

                    <Separator Background="Transparent"
                               Foreground="{StaticResource BRAND_CONTEXT_MENU_FOREGROUND_BRUSH}"
                               Visibility="{Binding ElementName=pref, Path=IsEnabled, Converter={StaticResource FalseToCollapsed}}" />

                    <MenuItem Command="{Binding ShowMainViewCmd}">
                        <MenuItem.Header>
                            <TextBlock Style="{StaticResource BlackTextBlock}" Text="{x:Static branding:Strings.TASKBAR_SHOW_WINDOW}" />
                        </MenuItem.Header>
                    </MenuItem>

                    <MenuItem Command="{Binding HideMainViewCmd}" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource FalseToCollapsed}}">
                        <MenuItem.Header>
                            <TextBlock Style="{StaticResource BlackTextBlock}" Text="{x:Static branding:Strings.TASKBAR_HIDE_WINDOW}" />
                        </MenuItem.Header>
                    </MenuItem>

                    <Separator Background="Transparent" Foreground="{StaticResource BRAND_CONTEXT_MENU_FOREGROUND_BRUSH}" />

                    <MenuItem Command="{Binding ExitCmd}">
                        <MenuItem.Header>
                            <TextBlock Style="{StaticResource BlackTextBlock}" Text="{x:Static branding:Strings.CLOSE_DIALOG_QUIT_BUTTON}" />
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <views:IsBusyView HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Visibility="{Binding SDKMonitor.IsBusy, Converter={StaticResource BoolToVisibility}, FallbackValue=Collapsed}" />

    </Grid>
</controls:MetroWindow>
