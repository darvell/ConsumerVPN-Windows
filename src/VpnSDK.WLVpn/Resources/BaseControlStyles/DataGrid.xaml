<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">

    <Style x:Key="MetroColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Margin="{TemplateBinding Padding}"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="0,0,1,0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="8" />
    </Style>

    <Style x:Key="MetroDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
        <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_LIST_BACKGROUND}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_LIST_HEADER_BORDER}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <controls:ContentControlEx x:Name="HeaderContent"
                                                   Grid.Column="0"
                                                   Margin="0,0,6,0"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Thumb x:Name="PART_LeftHeaderGripper"
                               Grid.Column="0"
                               HorizontalAlignment="Left"
                               HorizontalContentAlignment="Left"
                               Background="Transparent"
                               Style="{StaticResource MetroColumnHeaderGripperStyle}" />

                        <Path x:Name="SortArrow"
                              Grid.Column="1"
                              Width="10"
                              Height="6"
                              Margin="0,0,8,2"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Fill="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill"
                              Visibility="Collapsed" />

                        <Thumb x:Name="PART_RightHeaderGripper"
                               Grid.Column="1"
                               HorizontalAlignment="Right"
                               HorizontalContentAlignment="Right"
                               Style="{StaticResource MetroColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Data" Value="M 0,10 L 5,0 L 10,10 Z" />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Data" Value="M 0,0 L 5,10 L 10,0 Z" />
                            <Setter TargetName="SortArrow" Property="Margin" Value="0,0,8,0" />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="MetroDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  IsSelected  -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
            </MultiTrigger>

            <!--  IsKeyboardFocusWithin  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
            </MultiTrigger>

            <!--  IsEnabled  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>

            <!--  IsEnabled and IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="false" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="false" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InternalDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  IsSelected  -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}" />
            </MultiTrigger>

            <!--  IsKeyboardFocusWithin  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}" />
            </MultiTrigger>

            <!--  IsEnabled  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>

            <!--  IsEnabled and IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="false" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="false" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InternalDataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="controls:DataGridRowHelper.SelectionUnit" Value="{Binding Path=SelectionUnit, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate" Value="{StaticResource DefaultRowValidationErrorTemplate}" />
        <Setter Property="DetailsVisibility" Value="Collapsed" />
        <Style.Triggers>
            <!--  IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>

            <!--  IsMouseOver  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush4}" />
            </MultiTrigger>

            <!--  IsEnabled  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsEnabled" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </MultiTrigger>

            <!--  IsEnabled and IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsEnabled" Value="false" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="MetroDataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="controls:DataGridRowHelper.SelectionUnit" Value="{Binding Path=SelectionUnit, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_LIST_BACKGROUND}" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate" Value="{StaticResource DefaultRowValidationErrorTemplate}" />
        <Setter Property="DetailsVisibility" Value="Collapsed" />
        <Style.Triggers>
            <!--  IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>

            <!--  IsMouseOver  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BRAND_LOCATION_SERVERS_LIST_BACKGROUND}" />
            </MultiTrigger>

            <!--  IsEnabled  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsEnabled" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </MultiTrigger>

            <!--  IsEnabled and IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsEnabled" Value="false" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BRAND_GRID_TEXT_FOREGROUND}" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_LIST_BACKGROUND}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource MetroDataGridColumnHeader}" />
        <Setter Property="CellStyle" Value="{StaticResource MetroDataGridCell}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource MetroDataGridRowHeader}" />
        <Setter Property="RowStyle" Value="{StaticResource MetroDataGridRow}" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Width="{TemplateBinding Width}"
                                           Height="{TemplateBinding Height}"
                                           Fill="{TemplateBinding Background}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Width" Value="2" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
        <Setter Property="MinRowHeight" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Resources>
                                <Style TargetType="ScrollBar">
                                    <Setter Property="Template" Value="{DynamicResource FlatVerticalScrollBar}" />
                                    <Setter Property="Background" Value="{DynamicResource BRAND_LOCATION_LIST_HEADER_BORDER}" />
                                </Style>
                            </ScrollViewer.Resources>
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=MetroDataGridSelectAllButtonStyle,
                                                                                              TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    Grid.ColumnSpan="2"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        </Grid>
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>